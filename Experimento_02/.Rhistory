eval(parse(text = my_deriv$YacasForm))
}
my_deriv2()
my_deriv2(my_deriv
)
my_deriv2(5)
my_deriv$YacasForm
require("Ryacas")
install.packages("XML")
install.packages("XML")
require("Ryacas")
x <- Sym("x")
my_func <- function(x) {
return(x/(x^2 + 3))
}
my_deriv <- yacas(deriv(my_func(x), x))
x
x <- Sym("x")
2^2
f <- function(x){return(x/(x^2+3))}
f(10)
my_func(10)
der <- deriv(f)
der <- deriv(f, "x")
der <- yacas(deriv(f(x)))
der
f<-quote(2-2.1*cos(9.8x*)*sin(1.3*y))
f<-quote(2-2.1*cos(9.8*x)*sin(1.3*y))
remove(der, c, my_func)
remove(x)
D(f,"x")
Expand.Expr(f)
integrate(f, "x", 1,0)
install.packages("Maxima")
library(Ryacas)
a <- Sym("a")
a <- Sym("a"),- Sym("b")
a <- Sym("b")
a <- Sym("a")
b <- Sym("b")
f2 <- function(x){return(a*x+b)}
F2 <- yacas(Integrate(f2(x),x))
x <- Sym("x")
F2 <- yacas(Integrate(f2(x),x))
F2
Func2 <- gsub("a", "theta[1]", Func2$YacasForm)
Func2 <- gsub("b", "theta[2]", Func2)
F2 <- gsub("a", "theta[1]", F2$YacasForm)
F2 <- gsub("b", "theta[2]", F2)
f2
f2
F2
md <- function(x) {
eval(parse(text = F2$YacasForm))
}
md
md(5)
md(x)
F2 <- yacas(Integrate(f2(x),x))
md(x)
md(5)
yacasInstall()
install.packages(Ryacas)
install.packages("Ryacas")
install.packages("Ryacas")
library(Ryacas)
yacasInstall()
yacas("TeXForm(3 * x^2/(2 * (x + 1)) - (x^3) * 2/(2 * (x + 1))^2)",
+  retclass = "unquote")
yacas("TeXForm(3 * x^2/(2 * (x + 1)) - (x^3) * 2/(2 * (x + 1))^2)", retclass = "unquote")
runYacas()
runYacas <- function(method = "system", yacas.args = "", yacas.init = "") {
cmd <- yacasInvokeString(method = method, yacas.args = yacas.args, yacas.init = yacas.init)
if (.Platform$OS.type == "windows")
system(cmd, wait = FALSE, invisible = FALSE)
else system(cmd, wait = FALSE)
}
runYacas()
install.packages("yacas")
install.packages("Yacas")
demo("Ryacas")
demo("Ryacas")
demo("Ryacas-PrettyPrinter")
demo("Ryacas")
exp0
yacas(Integrate(exp0))
yacas(Integrate(exp0, "x"))
expression(yacas(Integrate(exp0, "x")))
yacas(expression((Integrate(exp0, "x"))))
res(yacas(expression((Integrate(exp0, "x")))))
res<-(yacas(expression((Integrate(exp0, "x")))))
print(res)
demo("Ryacas-Expr")
Eval.Expr(x,3)
Eval.Expr(x)
print(yacas(expression(integrate(1/x, x))))
print(yacas("Integrate(x)1/x"))
x <- Sym("x"); Integrate(1/x, x)
acos(Sym("1/2"))
x<- Sym(iconv("x", to = "ASCII"))
x
x
x<- Sym(iconv("x", to = "utf-8"))
x
x
x<- Sym("x")
x
print(x)
x<- Sym(iconv("x", to = "utf-8"))
print(x)
print("x")
a <- "x"
print(a)
yacas.character(x)
library(rSymPy)
library(rSymPy)
x <- Var("x")
install.packages("RJavaTools")
install.packages("rJython")
install.packages("rJython")
library(rSymPy)
x <- Var("x")
x <- Sym("x")
x+x
library(rJython)
x <- Var("x")
install.packages("rJava")
install.packages("rJava")
library(rSymPy)
x <- Var("x")
install.packages("rJson")
install.packages("rjson")
install.packages("rjson")
library(rSymPy)
x <- Var("x")
x <- Var("x".encode('utf-8'))
x <- Var("x").encode('utf-8'
iconv("x", to = 'utf-8')
x <- Var(iconv("x", to = 'utf-8'))
library(rSymPy)
x<-Var('x')
library(rSymPy)
x<-Var("x")
x<-sympy("var='x")
version
install.packages("Rgraphics")
library(rSymPy)
plox(sin(x))
plot(sin(x))
plot(sin(x))
x<-Var("x")
x<-Var(iconv("x"))
x<-Var(iconv("x", to = 'ascii'))
iconv("x", to = 'ascii')
sympyStart()
sympyStart()
?Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "")
sympyStart()
"ìcaro"
"Ícaro"
x = "Í"
x <- Sym("x")
x <- Sym("Í")
x
x <- Sym("x")
x
install.packages("diagram")
example(diagram)
library(diagram)
library(diagram)
example(diagram)
demo("flowchart")
solve(1,2,3)
solve(c(1,2,3))
solve(1)
solve(1,2,3,4)
install.packages("rootSolve")
f <- function(x) cos(x)^4 - 4*cos(x)^3 + 8*cos(x)^2 - 5*cos(x) + 1/2
uniroot(f, c(0,1))
plot(f)
uniroot(f, c(0,10))
uniroot(f, c(0,2))
uniroot(f, c(0,1.2))
plot(f)
c(uniroot(f, c(0,1))$root, uniroot(f, c(1,2))$root)
coefs <- c(1/2, -5, 8, -4, 1)
roots <- polyroot(coefs)
roots
e^2
exp(2)
exp(1)
curve(exp(x)*cos(x))
curve(exp(-x)*cos(x))
curve(exp(-x)*cos(x), from 0 to 10)
curve(exp(-x)*cos(x), xlim = c(0,10))
a = 1
b = 1
c = 1
curve(a*exp(-b*x)*cos(c*x+d), xlim = c(0,10))
d = 1
curve(a*exp(-b*x)*cos(c*x+d), xlim = c(0,10))
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,10))
e = 1
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,10))
b = 0.001
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,10))
b = .1
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,10))
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,100))
c = 50
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,100))
e = 0
c = 100
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,100))
c = 1
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,100))
c = 0.001
curve(a*exp(-b*x)*cos(c*x+d)+e, xlim = c(0,100))
library(readr)
ff <- read_csv("C:/Users/Ícaro/Dropbox/PIBIC/IC_2017/Experimento_03/DL/Saidas/SAIDA_RELU_DL_F5_1_500Freq1_COS_F15_40.csv")
View(ff)
plot(ff$Inputs,ff$`f(x,y)`)
plot(ff$Inputs,ff$`f(x,y)`~ff$`f*(x,y)`)
plot(ff$Inputs,ff$`f*(x,y)`, add = TRUE)
plot(ff$Inputs,ff$`f(x,y)`)
lines(ff$Inputs,ff$`f*(x,y)`)
lines(ff$Inputs,ff$`f(x,y)`)
plot(ff$Inputs,ff$`f(x,y)`)
points(ff$Inputs,ff$`f(x,y)`)
points(ff$Inputs,ff$`f*(x,y)`)
library(readr)
ff2 <- read_csv("C:/Users/Ícaro/Dropbox/PIBIC/IC_2017/Experimento_03/DL/Saidas/SAIDA_RELU_DL_F5_1_500Freq25_COS_F255_40.csv")
View(ff2)
plot(ff2$Inputs,ff2$`f(x,y)`)
ff2[order(-ff2[1])]
ff2[order(-ff2[,1])]
ff2[order(-ff2[,1]),]
ff2 <- ff2[order(-ff2[,1]),]
curve(ff2$Inputs,ff2$`f(x,y)`)
lines(ff2$Inputs,ff2$`f(x,y)`)
plot(ff2$Inputs,ff2$`f(x,y)`)
plot(ff2$Inputs,ff2$`f*(x,y)`)
plot(ff2$Inputs,ff2$`f(x,y)`)
plot(ff2$Inputs,ff2$`f*(x,y)`)
lines(ff2$Inputs,ff2$`f(x,y)`)
library(readr)
fresa <- read_csv("~/medidas.csv")
View(fresa)
library(readr)
torno <- read_csv("~/Diametros.csv")
View(torno)
boxplot(torno$D1, main = "Diâmetros da peça usinada", ylim = c(20,50), xlab = "Região", ylab = "Diâmetro (mm)")
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)")
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)", breaks = 100)
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)", breaks = 10)
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)", breaks = 5)
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)", breaks = 3)
hist(torno$D1, main = "Diâmetros da peça usinada", prob = TRUE, xlab = "Região", ylab = "Diâmetro (mm)", breaks = 2)
boxplot(fresa$Y, main = "Diâmetros da peça usinada", ylim = c(20,50), xlab = "Região", ylab = "Diâmetro (mm)")
boxplot(fresa$Y, main = "Diâmetros da peça usinada", ylim = c(171,171.5), xlab = "Região", ylab = "Diâmetro (mm)")
boxplot(fresa$X, main = "Diâmetros da peça usinada", ylim = c(171,171.5), xlab = "Região", ylab = "Diâmetro (mm)")
boxplot(fresa$X, main = "Diâmetros da peça usinada", ylim = c(171,171.4), xlab = "Região", ylab = "Diâmetro (mm)")
boxplot(fresa$Y, main = "Diâmetros da peça usinada", ylim = c(171,171.4), xlab = "Região", ylab = "Diâmetro (mm)", add = TRUE)
boxplot(fresa$X, fresa$Y, main = "Diâmetros da peça usinada", ylim = c(171,171.4), xlab = "Região", ylab = "Diâmetro (mm)")
boxplot(fresa$X, fresa$Y, main = "Diâmetros da peça usinada", ylim = c(171,171.4), xlab = "Eixo", ylab = "Diâmetro (mm)", names = c("X", "Y"))
boxplot(fresa$X, fresa$Y, main = "Dimensões da moldura a peça", ylim = c(171,171.4), xlab = "Eixo", ylab = "Diâmetro (mm)", names = c("X", "Y"))
boxplot(fresa$X, fresa$Y, main = "Dimensões da moldura da peça", ylim = c(171,171.4), xlab = "Eixo", ylab = "Diâmetro (mm)", names = c("X", "Y"))
boxplot(fresa$X, fresa$Y, main = "Dimensões da moldura da peça", ylim = c(171,171.4), xlab = "Eixo", ylab = "Comprimento (mm)", names = c("X", "Y"))
boxplot(fresa$X, fresa$Y, main = "Dimensões da moldura", ylim = c(171,171.4), xlab = "Eixo", ylab = "Comprimento (mm)", names = c("X", "Y"))
boxplot(fresa$X, fresa$Y, main = "Dimensões da Moldura", ylim = c(171,171.4), xlab = "Eixo", ylab = "Comprimento (mm)", names = c("X", "Y"))
setwd("C:/Users/Ícaro/Dropbox/PIBIC/IC_2017/Experimento_02")
load("C:/Users/Ícaro/Dropbox/PIBIC/IC_2017/Experimento_02/dadosR.RData")
gpra_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f1 <- gpra_f1[which(gpra_f1[5] != Inf), ]
gpra_f1 <- gpra_f1[which(gpra_f1[5] != 'NaN'), ]
gpra_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f2 <- gpra_f2[which(gpra_f2[5] != Inf), ]
gpra_f2 <- gpra_f2[which(gpra_f2[5] != 'NaN'), ]
gpra_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f3 <- gpra_f3[which(gpra_f3[5] != Inf), ]
gpra_f3 <- gpra_f3[which(gpra_f3[5] != 'NaN'), ]
gpra_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f4 <- gpra_f4[which(gpra_f4[5] != Inf), ]
gpra_f4 <- gpra_f4[which(gpra_f4[5] != 'NaN'), ]
gpra_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f5 <- gpra_f5[which(gpra_f5[5] != Inf), ]
gpra_f5 <- gpra_f5[which(gpra_f5[5] != 'NaN'), ]
remove(x,f)
gpr_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Reduzido.csv", quote ="", header=FALSE)
gpr_f1 <- gpr_f1[which(gpr_f1[5] != Inf), ]
gpr_f1 <- gpr_f1[which(gpr_f1[5] != 'NaN'), ]
gpr_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Reduzido.csv", quote ="", header=FALSE)
gpr_f2 <- gpr_f2[which(gpr_f2[5] != Inf), ]
gpr_f2 <- gpr_f2[which(gpr_f2[5] != 'NaN'), ]
gpr_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Reduzido.csv", quote ="", header=FALSE)
gpr_f3 <- gpr_f3[which(gpr_f3[5] != Inf), ]
gpr_f3 <- gpr_f3[which(gpr_f3[5] != 'NaN'), ]
gpr_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Reduzido.csv", quote ="", header=FALSE)
gpr_f4 <- gpr_f4[which(gpr_f4[5] != Inf), ]
gpr_f4 <- gpr_f4[which(gpr_f4[5] != 'NaN'), ]
gpr_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Reduzido.csv", quote ="", header=FALSE)
gpr_f5 <- gpr_f5[which(gpr_f5[5] != Inf), ]
gpr_f5 <- gpr_f5[which(gpr_f5[5] != 'NaN'), ]
gpa_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Alea.csv", quote ="", header=FALSE)
gpa_f1 <- gpa_f1[which(gpa_f1[5] != Inf), ]
gpa_f1 <- gpa_f1[which(gpa_f1[5] != 'NaN'), ]
gpa_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Alea.csv", quote ="", header=FALSE)
gpa_f2 <- gpa_f2[which(gpa_f2[5] != Inf), ]
gpa_f2 <- gpa_f2[which(gpa_f2[5] != 'NaN'), ]
gpa_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Alea.csv", quote ="", header=FALSE)
gpa_f3 <- gpa_f3[which(gpa_f3[5] != Inf), ]
gpa_f3 <- gpa_f3[which(gpa_f3[5] != 'NaN'), ]
gpa_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Alea.csv", quote ="", header=FALSE)
gpa_f4 <- gpa_f4[which(gpa_f4[5] != Inf), ]
gpa_f4 <- gpa_f4[which(gpa_f4[5] != 'NaN'), ]
gpa_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Alea.csv", quote ="", header=FALSE)
gpa_f5 <- gpa_f5[which(gpa_f5[5] != Inf), ]
gpa_f5 <- gpa_f5[which(gpa_f5[5] != 'NaN'), ]
gp_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_4.csv", quote ="", header=FALSE)
gp_f1 <- gp_f1[which(gp_f1[5] != Inf), ]
gp_f1 <- gp_f1[which(gp_f1[5] != 'NaN'), ]
gp_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2.csv", quote ="", header=FALSE)
gp_f2 <- gp_f2[which(gp_f2[5] != Inf), ]
gp_f2 <- gp_f2[which(gp_f2[5] != 'NaN'), ]
gp_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_1.csv", quote ="", header=FALSE)
gp_f3 <- gp_f3[which(gp_f3[5] != Inf), ]
gp_f3 <- gp_f3[which(gp_f3[5] != 'NaN'), ]
gp_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_3.csv", quote ="", header=FALSE)
gp_f4 <- gp_f4[which(gp_f4[5] != Inf), ]
gp_f4 <- gp_f4[which(gp_f4[5] != 'NaN'), ]
gp_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5.csv", quote ="", header=FALSE)
gp_f5 <- gp_f5[which(gp_f5[5] != Inf), ]
gp_f5 <- gp_f5[which(gp_f5[5] != 'NaN'), ]
View(gp_f5)
View(gp_f1)
boxplot(gp_fi[5]*100)
boxplot(gp_f1[5]*100)
boxplot(gp_f1[5]*100, ylim=c(0,70))
boxplot(gp_f1[5]*100~gp_f1[1], ylim=c(0,70))
boxplot(gp_f1[5]~gp_f1[1], ylim=c(0,70))
boxplot(gp_f1[5]*100*gp_f1[1], ylim=c(0,70))
boxplot(gp_f1[5]*100~gp_f1[1], ylim=c(0,70))
boxplot(as.numeric(unlist(gp_f1[5]*100))~as.numeric(unlist(gp_f1[1])), ylim=c(0,70))
boxplot(as.numeric(unlist(gp_f2[5]*100))~as.numeric(unlist(gp_f2[1])), ylim=c(0,70))
boxplot(as.numeric(unlist(gp_f3[5]*100))~as.numeric(unlist(gp_f3[1])), ylim=c(0,70))
boxplot(as.numeric(unlist(gp_f4[5]*100))~as.numeric(unlist(gp_f4[1])), ylim=c(0,70))
boxplot(as.numeric(unlist(gp_f5[5]*100))~as.numeric(unlist(gp_f5[1])), ylim=c(0,70))
boxplot(as.numeric(unlist(gpa_f5[5]*100))~as.numeric(unlist(gpa_f5[1])), ylim=c(0,70))
par(mfrow = c(2, 5))
boxplot(as.numeric(unlist(dls_1[5]))~as.numeric(unlist(dls_1[2]))*as.numeric(unlist(dls_1[2])), las = 2)
boxplot(abs(as.numeric(unlist(dls_2[5])))~as.numeric(unlist(dls_2[2]))*as.numeric(unlist(dls_2[2])), las = 2)
boxplot(as.numeric(unlist(dls_3[5]))~as.numeric(unlist(dls_3[2]))*as.numeric(unlist(dls_3[2])), las = 2)
boxplot(as.numeric(unlist(dls_4[5]))~as.numeric(unlist(dls_4[2]))*as.numeric(unlist(dls_4[2])), las = 2)
boxplot(as.numeric(unlist(dls_5[5]))~as.numeric(unlist(dls_5[2]))*as.numeric(unlist(dls_5[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_1[5]))~as.numeric(unlist(dlsa_1[2]))*as.numeric(unlist(dlsa_1[2])), las = 2)
boxplot(as.numeric(abs(unlist(dlsa_2[5])))~as.numeric(unlist(dlsa_2[2]))*as.numeric(unlist(dlsa_2[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_3[5]))~as.numeric(unlist(dlsa_3[2]))*as.numeric(unlist(dlsa_3[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_4[5]))~as.numeric(unlist(dlsa_4[2]))*as.numeric(unlist(dlsa_4[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_5[5]))~as.numeric(unlist(dlsa_5[2]))*as.numeric(unlist(dlsa_5[2])), las = 2)
par(mfrow = c(2, 5))
boxplot(as.numeric(unlist(dls_1[5]))~as.numeric(unlist(dls_1[2]))*as.numeric(unlist(dls_1[2])), las = 2)
boxplot(abs(as.numeric(unlist(dls_2[5])))~as.numeric(unlist(dls_2[2]))*as.numeric(unlist(dls_2[2])), las = 2)
boxplot(as.numeric(unlist(dls_3[5]))~as.numeric(unlist(dls_3[2]))*as.numeric(unlist(dls_3[2])), las = 2)
boxplot(as.numeric(unlist(dls_4[5]))~as.numeric(unlist(dls_4[2]))*as.numeric(unlist(dls_4[2])), las = 2)
boxplot(as.numeric(unlist(dls_5[5]))~as.numeric(unlist(dls_5[2]))*as.numeric(unlist(dls_5[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_1[5]))~as.numeric(unlist(dlsa_1[2]))*as.numeric(unlist(dlsa_1[2])), las = 2)
boxplot(as.numeric(abs(unlist(dlsa_2[5])))~as.numeric(unlist(dlsa_2[2]))*as.numeric(unlist(dlsa_2[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_3[5]))~as.numeric(unlist(dlsa_3[2]))*as.numeric(unlist(dlsa_3[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_4[5]))~as.numeric(unlist(dlsa_4[2]))*as.numeric(unlist(dlsa_4[2])), las = 2)
boxplot(as.numeric(unlist(dlsa_5[5]))~as.numeric(unlist(dlsa_5[2]))*as.numeric(unlist(dlsa_5[2])), las = 2)
boxplot(as.numeric(unlist(dlr_1[5]*100))~as.numeric(unlist(dlr_1[2]))*as.numeric(unlist(dlr_1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 3 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_1[5]*100))~as.numeric(unlist(dlra_1[2]))*as.numeric(unlist(dlra_1[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(dlr_1[5]*100))~as.numeric(unlist(dlr_1[2]))*as.numeric(unlist(dlr_1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 3 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_1[5]*100))~as.numeric(unlist(dlra_1[2]))*as.numeric(unlist(dlra_1[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gp_f4[5]*100))~as.numeric(unlist(gp_f4[2]))*as.numeric(unlist(gp_f4[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 1 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f4[5]*100))~as.numeric(unlist(gpa_f4[2]))*as.numeric(unlist(gpa_f4[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpa_f4[5]*100))~as.numeric(unlist(gpa_f4[2]))*as.numeric(unlist(gpa_f4[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpa_f4[5]*100))~as.numeric(unlist(gpa_f4[2]))*as.numeric(unlist(gpa_f4[1])), las = 2, ylim=(c(0,70)), border = "red")
boxplot(as.numeric(unlist(gp_f4[5]*100))~as.numeric(unlist(gp_f4[2]))*as.numeric(unlist(gp_f4[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 1 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(abs(as.numeric(unlist(gp_f2[5]*100)))~as.numeric(unlist(gp_f2[2]))*as.numeric(unlist(gp_f2[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 2  - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(gpa_f2[5]*100)))~as.numeric(unlist(gpa_f2[2]))*as.numeric(unlist(gpa_f2[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gp_f1[5]*100))~as.numeric(unlist(gp_f1[2]))*as.numeric(unlist(gp_f1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 3 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f1[5]*100))~as.numeric(unlist(gpa_f1[2]))*as.numeric(unlist(gpa_f1[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gp_f3[5]*100))~as.numeric(unlist(gp_f3[2]))*as.numeric(unlist(gp_f3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 4 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f3[5]*100))~as.numeric(unlist(gpa_f3[2]))*as.numeric(unlist(gpa_f3[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gp_f51[5]*100))~as.numeric(unlist(gp_f51[2]))*as.numeric(unlist(gp_f51[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 5 - Ativação ReLU", ylab = "Erro percentual (%)")
5
boxplot(as.numeric(unlist(gp_f5[5]*100))~as.numeric(unlist(gp_f5[2]))*as.numeric(unlist(gp_f5[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 5 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f5[5]*100))~as.numeric(unlist(gpa_f5[2]))*as.numeric(unlist(gpa_f5[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpr_f4[5]*100))~as.numeric(unlist(gpr_f4[2]))*as.numeric(unlist(gpr_f4[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 1 - Ativação Sigmóide", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpra_f4[5]*100))~as.numeric(unlist(gpra_f4[2]))*as.numeric(unlist(gpra_f4[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(abs(as.numeric(unlist(gpr_f2[5]*100)))~as.numeric(unlist(gpr_f2[2]))*as.numeric(unlist(gpr_f2[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 2  - Ativação Sigmóide", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(gpra_f2[5]*100)))~as.numeric(unlist(gpra_f2[2]))*as.numeric(unlist(gpra_f2[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpr_f1[5]*100))~as.numeric(unlist(gpr_f1[2]))*as.numeric(unlist(gpr_f1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 3 - Ativação Sigmóide", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpra_f1[5]*100))~as.numeric(unlist(gpra_f1[2]))*as.numeric(unlist(gpra_f1[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpr_f3[5]*100))~as.numeric(unlist(gpr_f3[2]))*as.numeric(unlist(gpr_f3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 4 - Ativação Sigmóide", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpra_f3[5]*100))~as.numeric(unlist(gpra_f3[2]))*as.numeric(unlist(gpra_f3[1])), las = 2, ylim=(c(0,70)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(gpr_f51[5]*100))~as.numeric(unlist(gpr_f51[2]))*as.numeric(unlist(gpr_f51[1])), las = 2, ylim=(c(0,70)), border = "blue", col = "light blue", main = "Função 5 - Ativação Sigmóide", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpra_f5[5]*100))~as.numeric(unlist(gpra_f5[2]))*as.numeric(unlist(gpra_f5[1])), las = 2, ylim=(c(0,70)),  border = "red", add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = "light blue", alpha = .5 , main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = "light blue", alpha = .5 , main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", alpha = .5, add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = rgb(0,0,1, alpha = 0.5), main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", col = rgb(1,0,0, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = rgb(0,0,0.5, alpha = 0.5), main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", col = rgb(0.5,0,0, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = rgb(0,0,0.25, alpha = 0.5), main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", col = rgb(0.25,0,0, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_51[4]))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,.002)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Função 5 - Ativação ReLU", ylab = "")
boxplot(as.numeric(unlist(dlra_51[4]))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,.002)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_1[5]*100))~as.numeric(unlist(dlr_1[2]))*as.numeric(unlist(dlr_1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Função 3 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_1[5]*100))~as.numeric(unlist(dlra_1[2]))*as.numeric(unlist(dlra_1[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_51[5]*100))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Função 5 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_51[5]*100))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(abs(as.numeric(unlist(dlr_2[5]*100)))~as.numeric(unlist(dlr_2[2]))*as.numeric(unlist(dlr_2[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Função 2  - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(dlra_2[5]*100)))~as.numeric(unlist(dlra_2[2]))*as.numeric(unlist(dlra_2[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(abs(as.numeric(unlist(dlr_2[5]*100)))~as.numeric(unlist(dlr_2[2]))*as.numeric(unlist(dlr_2[1])), las = 2, ylim=(c(0,300)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Função 2  - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(dlra_2[5]*100)))~as.numeric(unlist(dlra_2[2]))*as.numeric(unlist(dlra_2[1])), las = 2, ylim=(c(0,300)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f4[5]*100))~as.numeric(unlist(gp_f4[2]))*as.numeric(unlist(gp_f4[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 1 - Ativação ReLU", ylab = "Erro percentual (%)")
box
boxplot(as.numeric(unlist(gpa_f4[5]*100))~as.numeric(unlist(gpa_f4[2]))*as.numeric(unlist(gpa_f4[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
par(mfrow = c(1,2))
boxplot(abs(as.numeric(unlist(dlr_2[5]*100)))~as.numeric(unlist(dlr_2[2]))*as.numeric(unlist(dlr_2[1])), las = 2, ylim=(c(0,300)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Deep Learning\nFunção 2  - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(dlra_2[5]*100)))~as.numeric(unlist(dlra_2[2]))*as.numeric(unlist(dlra_2[1])), las = 2, ylim=(c(0,300)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(abs(as.numeric(unlist(gp_f2[5]*100)))~as.numeric(unlist(gp_f2[2]))*as.numeric(unlist(gp_f2[1])), las = 2, ylim=(c(0,300)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 2 ", ylab = "Erro percentual (%)")
boxplot(as.numeric(abs(unlist(gpa_f2[5]*100)))~as.numeric(unlist(gpa_f2[2]))*as.numeric(unlist(gpa_f2[1])), las = 2, ylim=(c(0,300)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
par(mfrow = c(1,2))
boxplot(as.numeric(unlist(dlr_3[5]*100))~as.numeric(unlist(dlr_3[2]))*as.numeric(unlist(dlr_3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Deep Learning\nFunção 4 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_3[5]*100))~as.numeric(unlist(dlra_3[2]))*as.numeric(unlist(dlra_3[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f3[5]*100))~as.numeric(unlist(gp_f3[2]))*as.numeric(unlist(gp_f3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 4", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f3[5]*100))~as.numeric(unlist(gpa_f3[2]))*as.numeric(unlist(gpa_f3[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
#GP
gp_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_1.csv", quote ="", header=FALSE)
gp_f1 <- gp_f1[which(gp_f1[5] != Inf), ]
gp_f1 <- gp_f1[which(gp_f1[5] != 'NaN'), ]
gp_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2.csv", quote ="", header=FALSE)
gp_f2 <- gp_f2[which(gp_f2[5] != Inf), ]
gp_f2 <- gp_f2[which(gp_f2[5] != 'NaN'), ]
gp_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_3.csv", quote ="", header=FALSE)
gp_f3 <- gp_f3[which(gp_f3[5] != Inf), ]
gp_f3 <- gp_f3[which(gp_f3[5] != 'NaN'), ]
gp_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_4.csv", quote ="", header=FALSE)
gp_f4 <- gp_f4[which(gp_f4[5] != Inf), ]
gp_f4 <- gp_f4[which(gp_f4[5] != 'NaN'), ]
gp_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5.csv", quote ="", header=FALSE)
gp_f5 <- gp_f5[which(gp_f5[5] != Inf), ]
gp_f5 <- gp_f5[which(gp_f5[5] != 'NaN'), ]
gpa_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Alea.csv", quote ="", header=FALSE)
gpa_f1 <- gpa_f1[which(gpa_f1[5] != Inf), ]
gpa_f1 <- gpa_f1[which(gpa_f1[5] != 'NaN'), ]
gpa_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Alea.csv", quote ="", header=FALSE)
gpa_f2 <- gpa_f2[which(gpa_f2[5] != Inf), ]
gpa_f2 <- gpa_f2[which(gpa_f2[5] != 'NaN'), ]
gpa_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Alea.csv", quote ="", header=FALSE)
gpa_f3 <- gpa_f3[which(gpa_f3[5] != Inf), ]
gpa_f3 <- gpa_f3[which(gpa_f3[5] != 'NaN'), ]
gpa_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Alea.csv", quote ="", header=FALSE)
gpa_f4 <- gpa_f4[which(gpa_f4[5] != Inf), ]
gpa_f4 <- gpa_f4[which(gpa_f4[5] != 'NaN'), ]
gpa_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Alea.csv", quote ="", header=FALSE)
gpa_f5 <- gpa_f5[which(gpa_f5[5] != Inf), ]
gpa_f5 <- gpa_f5[which(gpa_f5[5] != 'NaN'), ]
#GP Reduzido
gpr_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Reduzido.csv", quote ="", header=FALSE)
gpr_f1 <- gpr_f1[which(gpr_f1[5] != Inf), ]
gpr_f1 <- gpr_f1[which(gpr_f1[5] != 'NaN'), ]
gpr_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Reduzido.csv", quote ="", header=FALSE)
gpr_f2 <- gpr_f2[which(gpr_f2[5] != Inf), ]
gpr_f2 <- gpr_f2[which(gpr_f2[5] != 'NaN'), ]
gpr_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Reduzido.csv", quote ="", header=FALSE)
gpr_f3 <- gpr_f3[which(gpr_f3[5] != Inf), ]
gpr_f3 <- gpr_f3[which(gpr_f3[5] != 'NaN'), ]
gpr_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Reduzido.csv", quote ="", header=FALSE)
gpr_f4 <- gpr_f4[which(gpr_f4[5] != Inf), ]
gpr_f4 <- gpr_f4[which(gpr_f4[5] != 'NaN'), ]
gpr_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Reduzido.csv", quote ="", header=FALSE)
gpr_f5 <- gpr_f5[which(gpr_f5[5] != Inf), ]
gpr_f5 <- gpr_f5[which(gpr_f5[5] != 'NaN'), ]
gpra_f1 <- read.csv("GP/Result_GP_EXP2_FUNC_1_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f1 <- gpra_f1[which(gpra_f1[5] != Inf), ]
gpra_f1 <- gpra_f1[which(gpra_f1[5] != 'NaN'), ]
gpra_f2 <- read.csv("GP/Result_GP_EXP2_FUNC_2_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f2 <- gpra_f2[which(gpra_f2[5] != Inf), ]
gpra_f2 <- gpra_f2[which(gpra_f2[5] != 'NaN'), ]
gpra_f3 <- read.csv("GP/Result_GP_EXP2_FUNC_3_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f3 <- gpra_f3[which(gpra_f3[5] != Inf), ]
gpra_f3 <- gpra_f3[which(gpra_f3[5] != 'NaN'), ]
gpra_f4 <- read.csv("GP/Result_GP_EXP2_FUNC_4_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f4 <- gpra_f4[which(gpra_f4[5] != Inf), ]
gpra_f4 <- gpra_f4[which(gpra_f4[5] != 'NaN'), ]
gpra_f5 <- read.csv("GP/Result_GP_EXP2_FUNC_5_Reduzido_Alea.csv", quote ="", header=FALSE)
gpra_f5 <- gpra_f5[which(gpra_f5[5] != Inf), ]
gpra_f5 <- gpra_f5[which(gpra_f5[5] != 'NaN'), ]
boxplot(as.numeric(unlist(dlr_3[5]*100))~as.numeric(unlist(dlr_3[2]))*as.numeric(unlist(dlr_3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Deep Learning\nFunção 4 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_3[5]*100))~as.numeric(unlist(dlra_3[2]))*as.numeric(unlist(dlra_3[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f3[5]*100))~as.numeric(unlist(gp_f3[2]))*as.numeric(unlist(gp_f3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 4", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f3[5]*100))~as.numeric(unlist(gpa_f3[2]))*as.numeric(unlist(gpa_f3[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_51[5]*100))~as.numeric(unlist(dlr_51[2]))*as.numeric(unlist(dlr_51[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Deep Learning\nFunção 5 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_51[5]*100))~as.numeric(unlist(dlra_51[2]))*as.numeric(unlist(dlra_51[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f5[5]*100))~as.numeric(unlist(gp_f5[2]))*as.numeric(unlist(gp_f5[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 5", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f5[5]*100))~as.numeric(unlist(gpa_f5[2]))*as.numeric(unlist(gpa_f5[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f1[5]*100))~as.numeric(unlist(gp_f1[2]))*as.numeric(unlist(gp_f1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 3", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f1[5]*100))~as.numeric(unlist(gpa_f1[2]))*as.numeric(unlist(gpa_f1[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f3[5]*100))~as.numeric(unlist(gp_f3[2]))*as.numeric(unlist(gp_f3[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 4", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f3[5]*100))~as.numeric(unlist(gpa_f3[2]))*as.numeric(unlist(gpa_f3[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(dlr_1[5]*100))~as.numeric(unlist(dlr_1[2]))*as.numeric(unlist(dlr_1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Deep Learning\nFunção 3 - Ativação ReLU", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(dlra_1[5]*100))~as.numeric(unlist(dlra_1[2]))*as.numeric(unlist(dlra_1[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
boxplot(as.numeric(unlist(gp_f1[5]*100))~as.numeric(unlist(gp_f1[2]))*as.numeric(unlist(gp_f1[1])), las = 2, ylim=(c(0,70)), border = "blue", col = rgb(0.5,0.5,1, alpha = 0.5), main = "Genetic Programming\nFunção 3", ylab = "Erro percentual (%)")
boxplot(as.numeric(unlist(gpa_f1[5]*100))~as.numeric(unlist(gpa_f1[2]))*as.numeric(unlist(gpa_f1[1])), las = 2, ylim=(c(0,70)), border = "red", col = rgb(1,0.5,0.5, alpha = 0.5), add= TRUE)
save.image("C:/Users/Ícaro/Dropbox/PIBIC/IC_2017/Experimento_02/dadosR.RData")
