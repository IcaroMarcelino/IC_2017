nome = 'Icaro M. Miranda'
class(nome)
paste("Meu nome é ", nome)
?pastr
?paste
variavel <- 5
variavel
variavel = 10
class(variavel)
variavel/0
variavel = 10L
class(variavel)
valores = -10:10
valores
class(valores)
as.numeric(valores)
class(valores)
as.complex(valores)
valores > 5
maiorQue5 = valores[valores > 5]
maiorQue5
q()
x = 1,2,3,4,5,6,7,8,9,10
x = 1:10
y = x**2
plot(x,y)
x = t
y = t**3
y = x**3
q()
x <- [:10]
x = [1,2,3,4]
x = 2
plot(t,t**@)
plot(t,t**2)
x = 1:10
y = x**2
plot(x,y)
integrate(t, 1, 100)
read.csv("df.csv")
df <- read.csv("~/Documentos/df.csv", header=FALSE)
View(df)
remove(df)
df <- read.csv("~/Documentos/df.csv", header=FALSE)
View(df)
p1=df[[1]]
p2=df[[2]]
p3=df[[3]]
p4=df[[3]]
p4=df[[4]]
p4=df[[5]]
p4=df[[4]]
p5=df[[5]]
p6=df[[6]]
p7=df[[7]]
p8=df[[8]]
p9=df[[9]]
p1=unique(p1)
p6=unique(p6)
Fluconazol <- read.csv("~/Downloads/c4.5/R8/Src/Fluconazol.data", header=FALSE)
View(Fluconazol)
f = Fluconazol
p1 = [[1]]
p1 = f[[1]]
p1 = unique(p1)
p1 = sort(p1)
p2 = f[[2]]
p3 = f[[3]]
p4 = f[[4]]
p5 = f[[5]]
p6 = f[[6]]
p7 = f[[7]]
p8 = f[[8]]
p9 = f[[9]]
p10 = f[[10]]
p11 = f[[11]]
p12 = f[[12]]
p13 = f[[13]]
p1
p6=unique(p6)
sort(p3)
p5=unique(p5)
sort(p5)
levels(p7)
p7=unique(p7)
p7=sort(p7)
p7
p8=unique(p8)
p8
p9=unique(p9)
p9
base_estrangeiros <- read.csv("~/\x01rea de Trabalho/Unb/Semestre 05/Estudos em Sistemas de Informa\x07\x03o/info/Novas bases/base_estrangeiros.csv", header=FALSE, sep=";")
View(base_estrangeiros)
base_estrangeiros <- read.csv("~/\x01rea de Trabalho/Unb/Semestre 05/Estudos em Sistemas de Informa\x07\x03o/info/Novas bases/base_estrangeiros.csv", header=FALSE, sep=";")
View(base_estrangeiros)
q()
install.packages("h2o")
library("h2o")
a = h2o.init()
install.packages(ploty)
install.packages("plot3D")
install.packages("ploty")
setwd("~/Dropbox/PIBIC/IC_2017/EXP2/GP")
d = read.csv("INFO_GP_EXP2.csv", quote="", header = FALSE)
View(d)
d[-c(251,252,253,254,255)]
d = d[-c(251,252,253,254,255)]
View(d)
d = d[-c(251,252,253,254,255)]
d = d[-(251,252,253,254,255)]
d[-255]
d = d[-255]
d = read.csv("INFO_GP_EXP2.csv", quote="", header = FALSE)
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=20, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
d = read.csv("INFO_GP_EXP2.csv", quote="", header = FALSE, dec = ',')
View(d)
d = read.csv("INFO_GP_EXP2.csv", quote="", header = FALSE)
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=20, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=20, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade\nExperimento 2 - Genetic Programming",
main="Distribuição de Frequências - MSE")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=20, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE\nExperimento 2 - Genetic Programming")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
A = as.numeric(unlist(d[1]))
N = as.numeric(unlist(d[2]))
M = as.numeric(unlist(d[4]))
T = as.numeric(unlist(d[6]))
hist(M~A)
hist(M)
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=50, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE\nExperimento 2 - Genetic Programming")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=10, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE\nExperimento 2 - Genetic Programming")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=5, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE\nExperimento 2 - Genetic Programming")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = as.numeric(unlist(d[4]))
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=50, prob=TRUE,
xlab="MSE", ylab = "Densidade de Probabilidade",
main="Distribuição de Frequências - MSE\nExperimento 2 - Genetic Programming")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt=
boxplot(M~A)
boxplot(M~A)
boxplot(M)
boxplot(M,A)
boxplot(M~A)
boxplot(M~N)
boxplot(T~N)
boxplot(T~A)
boxplot(T/60~A)
boxplot(T/3600~A)
boxplot(T~A)
boxplot(T/60~A)
boxplot(M~A)
boxplot(M~A, main = "Experimento 2 - Genetic Prograaming")
boxplot(M~A, main = "Experimento 2 - Genetic Programming")
boxplot(M~A, main = "Experimento 2 - Genetic Programming", xlab = "Tamannho Máximo de Árvore Permitido")
boxplot(M~A, main = "Experimento 2 - Genetic Programming", xlab = "Tamannho Máximo de Árvore Permitido", ylab = "MSE")
boxplot(M~A, main = "Experimento 2 - Genetic Programming", xlab = "Tamannho Máximo de Árvore", ylab = "MSE")
boxplot(M~A, main = "Experimento 2 - Genetic Programming", xlab = "Número de Amostras", ylab = "MSE")
boxplot(M~N, main = "Experimento 2 - Genetic Programming", xlab = "Número de Amostras", ylab = "MSE")
boxplot(T/60~N, main = "Experimento 2 - Genetic Programming", xlab = "Número de Amostras", ylab = "Tempo de Execução (min)")
boxplot(T/60~N, main = "Experimento 2 - Genetic Programming", xlab = "Tamanho Máximo de Árvore", ylab = "Tempo de Execução (min)")
boxplot(T/60~A, main = "Experimento 2 - Genetic Programming", xlab = "Tamanho Máximo de Árvore", ylab = "Tempo de Execução (min)")
boxplot(T/60~A*N, main = "Experimento 2 - Genetic Programming", xlab = "Tamanho Máximo de Árvore", ylab = "Tempo de Execução (min)")
boxplot(T/60~A*N, main = "Experimento 2 - Genetic Programming", xlab = "Tamanho Máximo de Árvore", ylab = "Tempo de Execução (min)", las =2)
boxplot(T/60~N*A, main = "Experimento 2 - Genetic Programming", xlab = "Tamanho Máximo de Árvore", ylab = "Tempo de Execução (min)", las =2)
boxplot(T/60~N*A, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "Tempo de Execução (min)", las =2)
title(xlab = "Número de Amostras . Tamanho Máximo de Árvore", cex.lab = 1.5,
line = 4.5)
title(xlab = "Número de Amostras . Tamanho Máximo de Árvore", cex.lab = 1.5,
line = 3.5)
title(xlab = "Número de Amostras . Tamanho Máximo de Árvore", cex.lab = 1.5,
line = 4)
boxplot(T/60~N*A, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "Tempo de Execução (min)", las =2)
title(xlab = "Número de Amostras . Tamanho Máximo de Árvore", cex.lab = 1.0,
line = 4)
boxplot(T/60~N*A, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "Tempo de Execução (min)", las =2)
title(xlab = "Número de Amostras . Tamanho Máximo de Árvore", cex.lab = .5,
line = 4)
boxplot(T/60~N*A, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "Tempo de Execução (min)", las =2)
boxplot(M~N*A, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "MSE", las =2)
boxplot(M~A*N, main = "Experimento 2 - Genetic Programming", xlab = "", ylab = "MSE", las =2)
